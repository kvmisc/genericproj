
多年从事 iOS 应用程序开发工作，熟悉 iOS App 开发流程，熟悉 C/C++ 和 Objective-C 语言，熟悉 Objective-C 底层原理，熟悉性能优化，能够培训 iOS 开发者；大学专业是软件工程，了解操作系统原理、面向对象编程思想、多线程编程和基础的数据结构；英语功底扎实，能无障碍阅读英文资料。


熟悉 iOS App 开发流程；
熟悉 C/C++ 和 ObjC，运行时、消息机制、RunLoop 等原理；
熟悉多线程编程；
熟悉 iOS App 性能优化；
熟悉部分 HTTP/S 原理，断点续传、多线程下载等；
了解面向对象编程思想；
了解简单 SHELL 和 Python；
了解部分操作系统原理、设计模式、数据结构；
英语功底扎实，能无障碍阅读英文资料；


咪咕音乐

1) 维护中国移动咪咕音乐客户端；
2) 开发中国移动内部考试软件；
3) 开发中国移动咪咕音箱项目；
4) 开发维吾尔语音乐客户端；
5) 开发哈萨克语音乐客户端；
6) 等。。。

负责底层基础网络框架搭建和部分页面实现，将网络请求、数据解析、数据管理和事件反馈整个流程完全封装，极大简化界面开发时候的数据获取和管理难度。

负责下载功能开发，管理下载任务、磁盘文件，实现断点下载，相当于迅雷基础功能。

负责网页动态页面开发，封装 WKWebView，处理 H5 页面 JavaScript 与本地功能的交互。

负责项目持续集成功能的实现，使用简单的 SHELL 和 Python。



TapKit

自己实现的工具库，里面包含了 iOS 项目开发过程中常用的工具和扩展，如 HTTP 请求、数据库管理、异步工具和本地缓存等，参考过 Three20、nimbus、ASIHTTPRequest 和 AFNetworking 等工具库。

研究过当时流行的几个 HTTP 请求工具的实现代码，然后实现了自己的版本，并通过 Multipart/form-data 方式增加文件上传功能，同时也包含了断点续传功能。

最初版本的代码规模非常庞大，后面发现很多功能与现有的优秀库重叠，则改变初衷进行精简，目标是小而精，尽量优化内存，使其能加进任何项目，并且不产生任何负担和依赖，每行代码都经过多次斟酌。

参考地址：https://github.com/kvmisc/tapkit



Firefox Chromecast

项目主要是开发一款类似于 Chromecast 的设备，Chromecast 可以通过 HDMI 接口连接一些电视机，并且自身已经配置了网络信息，用户在手机上点击投屏并选择 Chromecast， 就可以让 Chromecast 下载视频并显示在电视机上，而我们的项目与 Chromecast 的功能一模一样。项目参与人数众多，北京同事从事硬件和驱动开发，成都同事从事硬件之上的软件功能开发，同时与国外的 Mozilla 合作，搭载其研发的 Firefox OS，在 Firefox OS 之上则采用 Javascript 和 HTML5 构建播放器。

我主要负责 iOS 平台配置软件开发以及 SDK 移植，配置软件的主要功能是通过 SSDP 协议发现局域网中可配置的设备，连接设备并配置其连接到某 Wi-Fi，然后通过手机控制设备下载网络视频并投射到电视机。

开发过程中涉及到苹果标准文档制作、C++ 和 Objective-C 混编等技术，同时了解到正规且严格的项目管理流程，学习了规范的代码审查相关知识，并对此后的开发之路产生了深远影响。

参考地址：http://cn.engadget.com/2014/06/22/mozilla-firefox-os-chromecast/



遇见

公司的主要方向是社交通讯类软件定制，类似微信、陌陌等。期间开发了三款功能大致相同的软件，主要功能包括聊天、查找附近和分享推文等。

我主要负责 XMPP 框架、LBS 和朋友圈等模块开发工作。遇见的最初版本是外包到我们公司并由我开发，其中解决的技术问题包括 XMPP 协议、地图聚合和图文混排等。

由于公司使用的 XMPP 框架十分庞大且臃肿，期间移植了 libstrophe （一个轻量级的 XMPP 库）到 iOS 平台，但由于更换基础框架有很大的不确定因素，最终并没有得到应用。



游戏新闻

类似于网易新闻软件，不过主要是用于查看游戏资讯。

项目的核心部分是新闻详情页的实现，底层使用 CoreText 框架封装一个展示详情的视图，期间研究了字体的各种展示属性：基线、上行高度、下行高度等，掌握这些属性可以精确控制文字排版，组件还可以显示超级链接。

详情页实现了图文混排功能，并能显示 Gif 动画图片。



酒店预订软件

提供全国各地酒店查询和预订功能，酒店数据全部来自住哪网，它有一个酒店分销平台，分销联盟的成员可以得到分成。加入分销联盟即可使用住哪网提供的酒店数据。

此软件开发难度并不大，但是期间通过与不同公司的人员沟通合作，受益良多。



MSN 软件

参与完成一个通信软件集合，类似于曾经 App Store 上大火的通信软件 IM+，它里面包含 facebook、twitter、MSN 和 GTalk 等，同时包括视频聊天功能。

项目的难点在于完全从头开发，而 MSNP 协议并不是开放的，需要查阅国外程序员通过抓包分析并猜测总结而成的协议内容，阅读英文协议并反复尝试与微软服务器交互以查看服务器对不同命令的响应成为了前期大部分的工作。

协议实现的核心内容是通过一个消息循环监听服务器的响应内容，并用两个队列分别存放客户端的请求命令和服务器的响应内容，然后将响应内容解析并根据不同的响应命令分发到不同的命令处理函数，最终通知 UI 层更新状态。



180 in One

包含 180 个小工具的软件集合，这些工具都是 App Store 上已经存在的软件，公司要自己开发然后将其集合起来做成一个工具包软件。

项目中由于含有很多完全不同类型的工具，所以需要研究很多不同方面的技术，画图软件会用到 Quartz 2D、测分贝软件会用到 AVFoundation、相册软件会涉及到相机以及文件管理。

通过此项目初识了很多 Cocoa Touch 框架，包括地图、声音、画图、数据管理、文件系统和数据库等。


